{"version":3,"sources":["PromoChoice.js","data.js","Square.js","Board.js","logic.js","Chess.js","App.js","reportWebVitals.js","index.js"],"names":["PromoChoice","props","handleChange","e","choice","target","value","onChange","type","onClick","pieceCode","king","queen","rook","bishop","knight","pawn","promo","br","color","code","hasMoved","bn","bb","bq","wr","wn","wb","wq","boardStart","justJumped","targetsEmpty","Square","classes","squareColor","selected","push","pieceImg","piece","data","turn","check","onMouseEnter","onMouseLeave","row","col","className","join","Board","Array","from","length","v","i","map","board","targets","deepCopy","a","slice","getTargets","loc","jump","getKingTargets","seek","getRookTargets","getBishopTargets","getQueenTargets","getKnightTargets","forward","startRow","bound","dir","side","getPawnTargets","getValidTargets","locIsThreatened","getCastlingTargets","startLoc","validTargets","validateMove","validateTargets","move","getBounds","x","fBoundsRow","fBoundsCol","squares","square","endLoc","isInCheck","makeMove","newBoard","getKingLoc","anyTrue","handleEnPassant","resetJustJumped","Math","abs","Chess","useState","setBoard","setTargets","setSelected","setTurn","setCheck","winner","setWinner","choosingPromo","setChoosingPromo","promoLoc","setPromoLoc","logic","pLoc","resetSelection","switchTurn","enemy","parseInt","dataset","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61637913.chunk.js","sourcesContent":["function PromoChoice(props) {\n  const handleChange = (e) => {\n    const choice = e.target.value;\n    props.onChange(choice);\n  };\n\n  return (\n    <div>\n      <h3>Choose a piece:</h3>\n      <button type=\"button\" value=\"queen\" onClick={handleChange}>\n        Queen\n      </button>\n      <button type=\"button\" value=\"rook\" onClick={handleChange}>\n        Rook\n      </button>\n      <button type=\"button\" value=\"bishop\" onClick={handleChange}>\n        Bishop\n      </button>\n      <button type=\"button\" value=\"knight\" onClick={handleChange}>\n        Knight\n      </button>\n    </div>\n  );\n}\n\nexport default PromoChoice;\n","export const pieceCode = {\n  king: \"\\u265A\",\n  queen: \"\\u265B\",\n  rook: \"\\u265C\",\n  bishop: \"\\u265D\",\n  knight: \"\\u265E\",\n  pawn: \"\\u265F\",\n  promo: \"?\",\n};\n\nexport const getPiece = (color, type) => {\n  if (color === \"white\") {\n    switch (type) {\n      case \"queen\":\n        return wq();\n      case \"rook\":\n        return wr();\n      case \"bishop\":\n        return wb();\n      case \"knight\":\n        return wn();\n      default:\n        return wq();\n    }\n  } else {\n    switch (type) {\n      case \"queen\":\n        return bq();\n      case \"rook\":\n        return br();\n      case \"bishop\":\n        return bb();\n      case \"knight\":\n        return bn();\n      default:\n        return bq();\n    }\n  }\n};\n\nexport const bp = () => ({\n  color: \"black\",\n  type: \"pawn\",\n  code: \"\\u265F\",\n  justJumped: false,\n});\nexport const br = () => ({\n  color: \"black\",\n  type: \"rook\",\n  code: \"\\u265C\",\n  hasMoved: false,\n});\nexport const bn = () => ({ color: \"black\", type: \"knight\", code: \"\\u265E\" });\nexport const bb = () => ({ color: \"black\", type: \"bishop\", code: \"\\u265D\" });\nexport const bq = () => ({ color: \"black\", type: \"queen\", code: \"\\u265B\" });\nexport const bk = () => ({\n  color: \"black\",\n  type: \"king\",\n  code: \"\\u265A\",\n  hasMoved: false,\n});\nexport const wp = () => ({\n  color: \"white\",\n  type: \"pawn\",\n  code: \"\\u2659\",\n  justJumped: false,\n});\nexport const wr = () => ({\n  color: \"white\",\n  type: \"rook\",\n  code: \"\\u2656\",\n  hasMoved: false,\n});\nexport const wn = () => ({ color: \"white\", type: \"knight\", code: \"\\u2658\" });\nexport const wb = () => ({ color: \"white\", type: \"bishop\", code: \"\\u2657\" });\nexport const wq = () => ({ color: \"white\", type: \"queen\", code: \"\\u2655\" });\nexport const wk = () => ({\n  color: \"white\",\n  type: \"king\",\n  code: \"\\u2654\",\n  hasMoved: false,\n});\n\nexport const boardStart = [\n  [br(), bn(), bb(), bq(), bk(), bb(), bn(), br()],\n  [bp(), bp(), bp(), bp(), bp(), bp(), bp(), bp()],\n  [null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, null, null, null],\n  [wp(), wp(), wp(), wp(), wp(), wp(), wp(), wp()],\n  [wr(), wn(), wb(), wq(), wk(), wb(), wn(), wr()],\n];\n\nexport const boardEmpty = [\n  [null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, null, null, null],\n];\n\nexport const boardUtil = [\n  [null, null, null, null, null, null, null, null],\n  [wp(), wp(), wp(), wp(), wp(), wp(), wp(), wp()],\n  [null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, null, null, null],\n  [null, null, null, wk(), null, null, null, null],\n  [null, null, null, null, null, bk(), null, null],\n  [bp(), bp(), bp(), bp(), bp(), bp(), bp(), bp()],\n  [null, null, null, null, null, null, null, null],\n];\n\nexport const targetsEmpty = [\n  [false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false],\n];\n\nexport const targetsUtil = [\n  [false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false],\n  [false, false, true, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, false],\n  [false, false, false, false, false, false, false, true],\n];\n","import * as data from \"./data\";\n\nfunction Square(props) {\n  let classes = [props.squareColor];\n  if (props.selected) {\n    classes.push(\"selected\");\n  }\n  if (props.target) {\n    classes.push(\"target\");\n  }\n  const pieceImg = props.piece ? data.pieceCode[props.piece.type] : null;\n  if (props.piece) {\n    const piece = props.piece;\n    classes.push(piece.color);\n    if (piece.type === \"king\" && piece.color === props.turn && props.check) {\n      classes.push(\"check\");\n    }\n  } else {\n    classes.push(\"empty\");\n  }\n\n  return (\n    <td\n      onClick={props.onClick}\n      onMouseEnter={props.onMouseEnter}\n      onMouseLeave={props.onMouseLeave}\n      data-row={props.row}\n      data-col={props.col}\n      className={classes.join(\" \")}\n    >\n      {pieceImg}\n      {/* <svg width=\"20\" height=\"20\">\n        <circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"green\" />\n      </svg> */}\n    </td>\n  );\n}\n\nexport default Square;\n","import Square from \"./Square\";\n\nfunction Board(props) {\n  return (\n    <table>\n      <tbody>\n        {Array.from({ length: 8 }, (v, i) => i).map((row) => (\n          <tr key={row}>\n            {props.board[row].map((piece, col) => (\n              <Square\n                key={col}\n                squareColor={\n                  (row + col) % 2 === 0 ? \"whiteSquare\" : \"blackSquare\"\n                }\n                row={row}\n                col={col}\n                piece={piece}\n                check={props.check}\n                turn={props.turn}\n                selected={\n                  row === props.selected.row && col === props.selected.col\n                }\n                target={props.targets[row][col]}\n                onClick={props.onClick}\n                onMouseEnter={props.onMouseEnter}\n                onMouseLeave={props.onMouseLeave}\n              />\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default Board;\n","import * as data from \"./data\";\n\nexport function deepCopy(board) {\n  return board.map((a) => a.slice());\n}\n\n// doesn't consider results of moving to proposed targets\nexport function getTargets(piece, loc, board) {\n  let targets;\n  switch (piece.type) {\n    case \"king\":\n      targets = getKingTargets(piece, loc, board);\n      break;\n    case \"rook\":\n      targets = getRookTargets(piece, loc, board);\n      break;\n    case \"bishop\":\n      targets = getBishopTargets(piece, loc, board);\n      break;\n    case \"queen\":\n      targets = getQueenTargets(piece, loc, board);\n      break;\n    case \"knight\":\n      targets = getKnightTargets(piece, loc, board);\n      break;\n    case \"pawn\":\n      targets = getPawnTargets(piece, loc, board);\n      break;\n    default:\n      targets = deepCopy(data.targetsEmpty);\n  }\n  return targets;\n}\n\n// prevents moving into self-check positions\nexport function getValidTargets(piece, loc, board) {\n  let targets = getTargets(piece, loc, board);\n  if (piece.type === \"king\" && !piece.hasMoved) {\n    getCastlingTargets(piece, loc, board, targets);\n  }\n  targets = validateTargets(piece, board, loc, targets);\n  return targets;\n}\n\nfunction getCastlingTargets(piece, loc, board, targets) {\n  let row = piece.color === \"black\" ? 0 : 7;\n  let rook;\n  // right side:\n  rook = board[row][7];\n  if (\n    rook &&\n    rook.type === \"rook\" &&\n    !rook.hasMoved &&\n    !board[row][5] &&\n    !board[row][6] &&\n    !locIsThreatened(piece.color, { row, col: 4 }, board) &&\n    !locIsThreatened(piece.color, { row, col: 5 }, board) &&\n    !locIsThreatened(piece.color, { row, col: 6 }, board)\n  ) {\n    targets[row][6] = true;\n  }\n  // left side:\n  rook = board[row][0];\n  if (\n    rook &&\n    rook.type === \"rook\" &&\n    !rook.hasMoved &&\n    !board[row][1] &&\n    !board[row][2] &&\n    !board[row][3] &&\n    !locIsThreatened(piece.color, { row, col: 4 }, board) &&\n    !locIsThreatened(piece.color, { row, col: 3 }, board) &&\n    !locIsThreatened(piece.color, { row, col: 2 }, board)\n  ) {\n    targets[row][2] = true;\n  }\n  return targets;\n}\n\nfunction seek(piece, loc, board, targets, move) {\n  let row = loc.row + move.row;\n  let col = loc.col + move.col;\n  let getBounds = (move) => {\n    if (move === 1) {\n      return (x) => x < 8;\n    } else if (move === -1) {\n      return (x) => x >= 0;\n    } else {\n      return (x) => true;\n    }\n  };\n  let fBoundsRow = getBounds(move.row);\n  let fBoundsCol = getBounds(move.col);\n  while (fBoundsRow(row) && fBoundsCol(col)) {\n    if (board[row][col]) {\n      if (board[row][col].color !== piece.color) {\n        targets[row][col] = true;\n      }\n      break;\n    }\n    targets[row][col] = true;\n    row += move.row;\n    col += move.col;\n  }\n  return targets;\n}\n\nfunction getRookTargets(piece, loc, board) {\n  let targets = deepCopy(data.targetsEmpty);\n  let moves = [\n    { row: 1, col: 0 },\n    { row: -1, col: 0 },\n    { row: 0, col: 1 },\n    { row: 0, col: -1 },\n  ];\n  for (const move of moves) {\n    targets = seek(piece, loc, board, targets, move);\n  }\n  return targets;\n}\n\nfunction getBishopTargets(piece, loc, board) {\n  let targets = deepCopy(data.targetsEmpty);\n  let moves = [\n    { row: 1, col: 1 },\n    { row: 1, col: -1 },\n    { row: -1, col: 1 },\n    { row: -1, col: -1 },\n  ];\n  for (const move of moves) {\n    targets = seek(piece, loc, board, targets, move);\n  }\n  return targets;\n}\n\nfunction getQueenTargets(piece, loc, board) {\n  let targets = deepCopy(data.targetsEmpty);\n  let moves = [\n    // rook moves:\n    { row: 1, col: 0 },\n    { row: -1, col: 0 },\n    { row: 0, col: 1 },\n    { row: 0, col: -1 },\n    // bishop moves:\n    { row: 1, col: 1 },\n    { row: 1, col: -1 },\n    { row: -1, col: 1 },\n    { row: -1, col: -1 },\n  ];\n  for (const move of moves) {\n    targets = seek(piece, loc, board, targets, move);\n  }\n  return targets;\n}\n\nfunction jump(piece, loc, board, squares) {\n  let targets = deepCopy(data.targetsEmpty);\n  for (const square of squares) {\n    let row = loc.row + square.row;\n    let col = loc.col + square.col;\n    if (row >= 0 && row < 8 && col >= 0 && col < 8) {\n      if (board[row][col] === null || board[row][col].color !== piece.color) {\n        targets[row][col] = true;\n      }\n    }\n  }\n  return targets;\n}\n\nfunction getKingTargets(piece, loc, board) {\n  const squares = [\n    { row: -1, col: -1 },\n    { row: -1, col: 0 },\n    { row: -1, col: 1 },\n    { row: 0, col: -1 },\n    { row: 0, col: 1 },\n    { row: 1, col: -1 },\n    { row: 1, col: 0 },\n    { row: 1, col: 1 },\n  ];\n  let targets = jump(piece, loc, board, squares);\n  return targets;\n}\n\nfunction getKnightTargets(piece, loc, board) {\n  const squares = [\n    { row: -1, col: -2 },\n    { row: -2, col: -1 },\n    { row: -2, col: 1 },\n    { row: -1, col: 2 },\n    { row: 1, col: -2 },\n    { row: 2, col: -1 },\n    { row: 2, col: 1 },\n    { row: 1, col: 2 },\n  ];\n  return jump(piece, loc, board, squares);\n}\n\nfunction getPawnTargets(piece, loc, board) {\n  let targets = deepCopy(data.targetsEmpty);\n  let forward = piece.color === \"black\" ? 1 : -1;\n  let startRow = piece.color === \"black\" ? 1 : 6;\n  // forward movement:\n  if (!board[loc.row + forward][loc.col]) {\n    targets[loc.row + forward][loc.col] = true;\n    if (loc.row === startRow) {\n      if (!board[loc.row + 2 * forward][loc.col]) {\n        targets[loc.row + 2 * forward][loc.col] = true;\n      }\n    }\n  }\n  for (const side of [\n    // left attack\n    { bound: (col) => col > 0, dir: -1 },\n    // right attack\n    { bound: (col) => col < 7, dir: 1 },\n  ]) {\n    if (\n      (side.bound(loc.col) &&\n        // normal attack\n        board[loc.row + forward][loc.col + side.dir] &&\n        board[loc.row + forward][loc.col + side.dir].color !== piece.color) ||\n      // en passant\n      (board[loc.row][loc.col + side.dir] &&\n        board[loc.row][loc.col + side.dir].color !== piece.color &&\n        board[loc.row][loc.col + side.dir].type === \"pawn\" &&\n        board[loc.row][loc.col + side.dir].justJumped)\n    ) {\n      targets[loc.row + forward][loc.col + side.dir] = true;\n    }\n  }\n  return targets;\n}\n\nexport function resetJustJumped(board) {\n  let newBoard = deepCopy(board);\n  for (let row = 0; row < 8; row++) {\n    for (let col = 0; col < 8; col++) {\n      if (newBoard[row][col] && newBoard[row][col].type === \"pawn\") {\n        newBoard[row][col].justJumped = false;\n      }\n    }\n  }\n  return newBoard;\n}\n\n// remove any targets that result in self-check:\nexport function validateTargets(piece, board, startLoc, targets) {\n  let validTargets = deepCopy(targets);\n  for (let row = 0; row < 8; row++) {\n    for (let col = 0; col < 8; col++) {\n      if (targets[row][col]) {\n        validTargets[row][col] = validateMove(piece.color, board, startLoc, {\n          row,\n          col,\n        });\n      }\n    }\n  }\n  return validTargets;\n}\n\n// see if move doesn't end in self-check:\nexport function validateMove(color, board, startLoc, endLoc) {\n  let tryBoard = makeMove(board, startLoc, endLoc);\n  return !isInCheck(color, tryBoard);\n}\n\nexport function makeMove(board, startLoc, endLoc) {\n  let newBoard = deepCopy(board);\n  let piece = newBoard[startLoc.row][startLoc.col];\n  newBoard[startLoc.row][startLoc.col] = null;\n  newBoard[endLoc.row][endLoc.col] = piece;\n  return newBoard;\n}\n\nexport function isInCheck(color, board) {\n  const loc = getKingLoc(color, board);\n  return locIsThreatened(color, loc, board);\n}\n\nexport function isMated(color, board) {\n  for (let row = 0; row < 8; row++) {\n    for (let col = 0; col < 8; col++) {\n      const piece = board[row][col];\n      if (piece && piece.color === color) {\n        let validTargets = getValidTargets(piece, { row, col }, board);\n        if (anyTrue(validTargets)) {\n          return false;\n        }\n      }\n    }\n  }\n  // if no valid moves found:\n  return true;\n}\n\nexport function anyTrue(targets) {\n  for (let row = 0; row < 8; row++) {\n    for (let col = 0; col < 8; col++) {\n      if (targets[row][col]) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function getKingLoc(color, board) {\n  for (let row = 0; row < 8; row++) {\n    for (let col = 0; col < 8; col++) {\n      const piece = board[row][col];\n      if (piece && piece.color === color && piece.type === \"king\") {\n        return { row, col };\n      }\n    }\n  }\n}\n\nexport function locIsThreatened(color, loc, board) {\n  for (let row = 0; row < 8; row++) {\n    for (let col = 0; col < 8; col++) {\n      // if it's an enemy piece\n      if (board[row][col] && board[row][col].color !== color) {\n        let targets = getTargets(board[row][col], { row, col }, board);\n        if (targets[loc.row][loc.col]) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n}\n\nexport function handleCastling(board, startLoc, endLoc) {\n  let newBoard = deepCopy(board);\n  let piece = newBoard[startLoc.row][startLoc.col];\n  if (\n    piece.type === \"king\" &&\n    Math.abs(startLoc.col - endLoc.col) === 2 &&\n    !isInCheck(piece.color, newBoard)\n  ) {\n    piece.hasMoved = true;\n    if (endLoc.col === 6) {\n      // mark right rook as moved:\n      newBoard[startLoc.row][7].hasMoved = true;\n      // move right rook:\n      newBoard = makeMove(\n        newBoard,\n        { row: startLoc.row, col: 7 },\n        { row: startLoc.row, col: 5 }\n      );\n    } else if (endLoc.col === 2) {\n      // mark left rook as moved:\n      newBoard[startLoc.row][0].hasMoved = true;\n      // move left rook:\n      newBoard = makeMove(\n        newBoard,\n        { row: startLoc.row, col: 0 },\n        { row: startLoc.row, col: 3 }\n      );\n    }\n  }\n  // prevent castling after moving relevant pieces:\n  if (piece.type === \"king\" || piece.type === \"rook\") {\n    piece.hasMoved = true;\n  }\n  return newBoard;\n}\n\nexport function handleEnPassant(board, startLoc, endLoc) {\n  let newBoard = deepCopy(board);\n  newBoard = resetJustJumped(newBoard);\n  // if the current move is a pawn jump:\n  if (Math.abs(endLoc.row - startLoc.row) === 2) {\n    newBoard[startLoc.row][startLoc.col].justJumped = true;\n  }\n  // if current move is en-passant attack:\n  if (\n    // if the moving piece is a pawn:\n    newBoard[startLoc.row][startLoc.col].type === \"pawn\" &&\n    // if moving diagonally:\n    Math.abs(endLoc.row - startLoc.row) === 1 &&\n    Math.abs(endLoc.col - startLoc.col) === 1 &&\n    // if endLoc is empty\n    !newBoard[endLoc.row][endLoc.col]\n  ) {\n    // remove captured pawn:\n    newBoard[startLoc.row][endLoc.col] = null;\n  }\n  return newBoard;\n}\n\nexport function needsPromotion(board, startLoc, endLoc) {\n  let newBoard = deepCopy(board);\n  let piece = newBoard[startLoc.row][startLoc.col];\n  if (\n    piece.type === \"pawn\" &&\n    ((piece.color === \"black\" && endLoc.row === 7) ||\n      (piece.color === \"white\" && endLoc.row === 0))\n  ) {\n    return endLoc;\n  }\n  return false;\n}\n","import { useState } from \"react\";\nimport PromoChoice from \"./PromoChoice\";\nimport Board from \"./Board\";\nimport * as data from \"./data\";\nimport * as logic from \"./logic\";\n\nfunction Chess() {\n  const [board, setBoard] = useState(data.boardStart);\n  const [targets, setTargets] = useState(data.targetsEmpty);\n  const [selected, setSelected] = useState({ row: -1, col: -1 });\n  const [turn, setTurn] = useState(\"white\");\n  const [check, setCheck] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const [choosingPromo, setChoosingPromo] = useState(false);\n  const [promoLoc, setPromoLoc] = useState(null);\n\n  const selectSquare = (e) => {\n    // don't allow selections if player is still choosing a promo piece:\n    if (choosingPromo) {\n      return;\n    }\n    // can't select piece to move if game is over:\n    if (winner) {\n      return;\n    }\n    const row = parseInt(e.target.dataset.row);\n    const col = parseInt(e.target.dataset.col);\n    // if no piece has been selected yet:\n    if (selected.row < 0 && selected.col < 0) {\n      // if selecting an empty square:\n      if (!board[row][col]) {\n        return;\n      }\n      // if selecting a piece to move:\n      if (board[row][col]) {\n        if (turn === board[row][col].color) {\n          setSelected({ row, col });\n          setTargets(\n            logic.getValidTargets(board[row][col], { row, col }, board)\n          );\n        }\n        return;\n      }\n    } else {\n      // if selecting a target square:\n      const startLoc = { row: selected.row, col: selected.col };\n      const endLoc = { row, col };\n      move(board, startLoc, endLoc);\n      resetSelection();\n    }\n  };\n\n  const move = (board, startLoc, endLoc) => {\n    let newBoard = logic.deepCopy(board);\n\n    // debug: delete piece if double-clicked:\n    // if (startLoc.row === endLoc.row && startLoc.col === endLoc.col) {\n    //   newBoard[startLoc.row][startLoc.col] = null;\n    //   setBoard(newBoard);\n    //   return;\n    // }\n\n    // cancel move if selected square not a valid target:\n    if (!targets[endLoc.row][endLoc.col]) {\n      return;\n    }\n    newBoard = logic.handleCastling(newBoard, startLoc, endLoc);\n    newBoard = logic.handleEnPassant(newBoard, startLoc, endLoc);\n    // newBoard = handlePromotion(newBoard, startLoc, endLoc);\n    newBoard = logic.makeMove(newBoard, startLoc, endLoc);\n    // pawn promotion:\n    let pLoc = logic.needsPromotion(board, startLoc, endLoc);\n    if (pLoc) {\n      setPromoLoc(pLoc);\n      setChoosingPromo(true);\n      newBoard[pLoc.row][pLoc.col] = { color: turn, type: \"promo\" };\n      setBoard(newBoard);\n      resetSelection();\n      return;\n    }\n    setBoard(newBoard);\n    switchTurn(newBoard);\n  };\n\n  const resetSelection = () => {\n    setSelected({ row: -1, col: -1 });\n    setTargets(data.targetsEmpty);\n  };\n\n  const handlePromoPick = (choice) => {\n    let newBoard = logic.deepCopy(board);\n    newBoard[promoLoc.row][promoLoc.col] = data.getPiece(turn, choice);\n    setChoosingPromo(false);\n    setBoard(newBoard);\n    switchTurn(newBoard);\n  };\n\n  const switchTurn = (newBoard) => {\n    const enemy = turn === \"white\" ? \"black\" : \"white\";\n    if (logic.isInCheck(enemy, newBoard)) {\n      setCheck(true);\n    } else {\n      setCheck(false);\n    }\n    if (logic.isMated(enemy, newBoard)) {\n      setWinner(turn);\n      return;\n    }\n    setTurn((turn) => enemy);\n  };\n\n  const newGame = () => {\n    setBoard(data.boardStart);\n    setTurn(\"white\");\n    resetSelection();\n    setCheck(false);\n    setWinner(null);\n  };\n\n  // show the hovered piece's info:\n  // const logPiece = (e) => {\n  //   const row = parseInt(e.target.dataset.row);\n  //   const col = parseInt(e.target.dataset.col);\n  //   console.log(board[row][col]);\n  // };\n\n  const showTargets = (e) => {\n    if (selected.row < 0 && selected.col < 0) {\n      const row = parseInt(e.target.dataset.row);\n      const col = parseInt(e.target.dataset.col);\n      if (board[row][col] && board[row][col].color === turn) {\n        setTargets(logic.getValidTargets(board[row][col], { row, col }, board));\n      }\n    }\n  };\n\n  const hideTargets = () => {\n    if (selected.row < 0 && selected.col < 0) {\n      setTargets(data.targetsEmpty);\n    }\n  };\n\n  return (\n    <div>\n      <Board\n        board={board}\n        check={check}\n        turn={turn}\n        onClick={selectSquare}\n        selected={selected}\n        targets={targets}\n        onMouseEnter={showTargets}\n        onMouseLeave={hideTargets}\n      />\n      {choosingPromo && <PromoChoice onChange={handlePromoPick} />}\n      <p>{!winner ? `Turn: ${turn}` : \"\"}</p>\n      <p>{check && !winner ? \"Check!\" : \"\"}</p>\n      <p>{winner ? `${winner} wins!` : \"\"}</p>\n      <button type=\"button\" onClick={newGame}>\n        New Game\n      </button>\n    </div>\n  );\n}\n\nexport default Chess;\n","import \"./App.css\";\nimport Chess from \"./Chess\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Chess</h1>\n      <Chess />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}